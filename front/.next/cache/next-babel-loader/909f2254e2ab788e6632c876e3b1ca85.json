{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddrrp\\\\Desktop\\\\local\\\\score____temp\\\\front\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport \"../styles/globals.css\";\nimport Head from \"next/head\";\nimport MyLayout from \"../components/MyLayout\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport withRedux from \"next-redux-wrapper\";\nimport withReduxSaga from \"next-redux-saga\";\nimport { Middleware, applyMiddleware, compose, createStore, Store } from \"redux\";\nimport rootSaga from \"../sagas\";\n\nconst MyApp = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })), __jsx(MyLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }))));\n};\n\nconst makeStore = (initialState, options) => {\n  // 1: Create the middleware\n  const sagaMiddleware = createSagaMiddleware(); // Before we returned the created store without assigning it to a variable:\n  // return createStore(reducer, initialState);\n  // 2: Add an extra parameter for applying middleware:\n\n  const store = createStore(reducer, initialState, applyMiddleware(sagaMiddleware)); // 3: Run your sagas:\n\n  sagaMiddleware.run(rootSaga); // 4: now return the store:\n\n  return store;\n};\n\nexport default withRedux(makeStore)(withReduxSaga(MyApp));","map":{"version":3,"sources":["C:/Users/ddrrp/Desktop/local/score____temp/front/pages/_app.js"],"names":["Head","MyLayout","Provider","createSagaMiddleware","withRedux","withReduxSaga","Middleware","applyMiddleware","compose","createStore","Store","rootSaga","MyApp","Component","store","pageProps","makeStore","initialState","options","sagaMiddleware","reducer","run"],"mappings":";;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,OAAtC,EAA+CC,WAA/C,EAA4DC,KAA5D,QAAyE,OAAzE;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AACjD,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,6DAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,2EAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,iFAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,EAiBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAjBF,CADF;AAuBD,CAxBD;;AA0BA,MAAMC,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC3C;AACA,QAAMC,cAAc,GAAGhB,oBAAoB,EAA3C,CAF2C,CAI3C;AACA;AAEA;;AACA,QAAMW,KAAK,GAAGL,WAAW,CAACW,OAAD,EAAUH,YAAV,EAAwBV,eAAe,CAACY,cAAD,CAAvC,CAAzB,CAR2C,CAU3C;;AACAA,EAAAA,cAAc,CAACE,GAAf,CAAmBV,QAAnB,EAX2C,CAa3C;;AACA,SAAOG,KAAP;AACD,CAfD;;AAiBA,eAAeV,SAAS,CAACY,SAAD,CAAT,CAAqBX,aAAa,CAACO,KAAD,CAAlC,CAAf","sourcesContent":["import \"../styles/globals.css\"\r\nimport Head from \"next/head\"\r\nimport MyLayout from \"../components/MyLayout\"\r\nimport { Provider } from \"react-redux\"\r\nimport createSagaMiddleware from \"redux-saga\"\r\nimport withRedux from \"next-redux-wrapper\"\r\nimport withReduxSaga from \"next-redux-saga\"\r\nimport { Middleware, applyMiddleware, compose, createStore, Store } from \"redux\"\r\nimport rootSaga from \"../sagas\"\r\n\r\nconst MyApp = ({ Component, store, pageProps }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Head>\r\n        <link\r\n          rel='stylesheet'\r\n          href='https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css'\r\n        ></link>\r\n        <link\r\n          rel='stylesheet'\r\n          type='text/css'\r\n          href='https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css'\r\n        />\r\n        <link\r\n          rel='stylesheet'\r\n          type='text/css'\r\n          href='https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css'\r\n        />\r\n      </Head>\r\n      <MyLayout>\r\n        <Component {...pageProps} />\r\n      </MyLayout>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nconst makeStore = (initialState, options) => {\r\n  // 1: Create the middleware\r\n  const sagaMiddleware = createSagaMiddleware()\r\n\r\n  // Before we returned the created store without assigning it to a variable:\r\n  // return createStore(reducer, initialState);\r\n\r\n  // 2: Add an extra parameter for applying middleware:\r\n  const store = createStore(reducer, initialState, applyMiddleware(sagaMiddleware))\r\n\r\n  // 3: Run your sagas:\r\n  sagaMiddleware.run(rootSaga)\r\n\r\n  // 4: now return the store:\r\n  return store\r\n}\r\n\r\nexport default withRedux(makeStore)(withReduxSaga(MyApp))\r\n"]},"metadata":{},"sourceType":"module"}