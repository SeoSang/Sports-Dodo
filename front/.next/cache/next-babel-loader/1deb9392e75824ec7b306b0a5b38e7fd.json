{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddrrp\\\\Desktop\\\\local\\\\score____temp\\\\front\\\\pages\\\\_document.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Document, { Head, Main, NextScript } from \"next/document\"; // Import styled components ServerStyleSheet\n\nimport { ServerStyleSheet } from \"styled-components\";\nexport default class MyDocument extends Document {\n  static getInitialProps({\n    renderPage\n  }) {\n    // 1. 스타일 시트 인스턴스 생성\n    const sheet = new ServerStyleSheet(); // 2. 페이지 스타일들을 추출한다.\n\n    const page = renderPage(App => props => sheet.collectStyles(__jsx(App, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 69\n      }\n    })))); // 3. 스타일 태그들을 전부 <style>로 만들어서 추출한다.\n\n    const styleTags = sheet.getStyleElement(); // 4. props 에 style태그들을 넘겨준다.\n\n    return _objectSpread(_objectSpread({}, page), {}, {\n      styleTags\n    });\n  }\n\n  render() {\n    return __jsx(\"html\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, this.props.styleTags), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ddrrp/Desktop/local/score____temp/front/pages/_document.js"],"names":["Document","Head","Main","NextScript","ServerStyleSheet","MyDocument","getInitialProps","renderPage","sheet","page","App","props","collectStyles","styleTags","getStyleElement","render"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD,C,CACA;;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,eAAe,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAC/C,SAAOM,eAAP,CAAuB;AAAEC,IAAAA;AAAF,GAAvB,EAAuC;AACrC;AACA,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd,CAFqC,CAGrC;;AACA,UAAMK,IAAI,GAAGF,UAAU,CAAEG,GAAD,IAAUC,KAAD,IAAWH,KAAK,CAACI,aAAN,CAAoB,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApB,CAArB,CAAvB,CAJqC,CAKrC;;AACA,UAAME,SAAS,GAAGL,KAAK,CAACM,eAAN,EAAlB,CANqC,CAOrC;;AACA,2CAAYL,IAAZ;AAAkBI,MAAAA;AAAlB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKJ,KAAL,CAAWE,SAFd,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,CADF;AAYD;;AAzB8C","sourcesContent":["import Document, { Head, Main, NextScript } from \"next/document\"\r\n// Import styled components ServerStyleSheet\r\nimport { ServerStyleSheet } from \"styled-components\"\r\n\r\nexport default class MyDocument extends Document {\r\n  static getInitialProps({ renderPage }) {\r\n    // 1. 스타일 시트 인스턴스 생성\r\n    const sheet = new ServerStyleSheet()\r\n    // 2. 페이지 스타일들을 추출한다.\r\n    const page = renderPage((App) => (props) => sheet.collectStyles(<App {...props} />))\r\n    // 3. 스타일 태그들을 전부 <style>로 만들어서 추출한다.\r\n    const styleTags = sheet.getStyleElement()\r\n    // 4. props 에 style태그들을 넘겨준다.\r\n    return { ...page, styleTags }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <html>\r\n        <Head>\r\n          {/* 최종 : head에 뽑았던 스타일 태그들을 넣어준다. */}\r\n          {this.props.styleTags}\r\n        </Head>\r\n        <body>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </html>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}